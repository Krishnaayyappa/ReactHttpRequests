{"ast":null,"code":"var _jsxFileName = \"/Users/krishnanarina/Desktop/httprequestsproj/src/App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false); // Syntax:1(using .then())\n  // function fetchMoviesHandler(){\n  //   fetch(\"https://swapi.dev/api/films/\").then(response => {\n  //     return response.json();\n  //   }).then (data => {\n  //     const transformedMovies = data.results.map(movie => {\n  //       return {id:movie.episode_id,\n  //         title:movie.title,\n  //         releaseDate:movie.release_date,\n  //         director:movie.director};\n  //     });\n  //     setMovies(transformedMovies);\n  //   })\n  // }\n  //syntax:2 (using async-await)\n\n  async function fetchMoviesHandler() {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    const transformedMovies = data.results.map(movie => {\n      return {\n        id: movie.episode_id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        director: movie.director\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, !isLoading && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 44\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), !isLoading && movies.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 47\n    }\n  }, \"No movies were found\")));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","MoviesList","App","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","transformedMovies","results","map","movie","id","episode_id","title","releaseDate","release_date","director","length"],"sources":["/Users/krishnanarina/Desktop/httprequestsproj/src/App.js"],"sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false)\n\n  // Syntax:1(using .then())\n\n  // function fetchMoviesHandler(){\n  //   fetch(\"https://swapi.dev/api/films/\").then(response => {\n  //     return response.json();\n  //   }).then (data => {\n  //     const transformedMovies = data.results.map(movie => {\n  //       return {id:movie.episode_id,\n  //         title:movie.title,\n  //         releaseDate:movie.release_date,\n  //         director:movie.director};\n  //     });\n  //     setMovies(transformedMovies);\n  //   })\n  // }\n\n  //syntax:2 (using async-await)\n  async function fetchMoviesHandler(){\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    const transformedMovies = data.results.map(movie => {\n      return {id:movie.episode_id,\n        title:movie.title,\n        releaseDate:movie.release_date,\n        director:movie.director};\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n  }\n\n  \n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick = {fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length >0 && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && movies.length === 0 && <p>No movies were found</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C,CAjBa,CAmBb;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,eAAeO,kBAAf,GAAmC;IACjCD,YAAY,CAAC,IAAD,CAAZ;IACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;IACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;IACA,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiBC,KAAK,IAAI;MAClD,OAAO;QAACC,EAAE,EAACD,KAAK,CAACE,UAAV;QACLC,KAAK,EAACH,KAAK,CAACG,KADP;QAELC,WAAW,EAACJ,KAAK,CAACK,YAFb;QAGLC,QAAQ,EAACN,KAAK,CAACM;MAHV,CAAP;IAIC,CALuB,CAA1B;IAMEjB,SAAS,CAACQ,iBAAD,CAAT;IACAN,YAAY,CAAC,KAAD,CAAZ;EACH;;EAID,oBACE,oBAAC,KAAD,CAAO,QAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAQ,OAAO,EAAIC,kBAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADF,CADF,eAIE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACG,CAACF,SAAD,IAAcF,MAAM,CAACmB,MAAP,GAAe,CAA7B,iBAAkC,oBAAC,UAAD;IAAY,MAAM,EAAEnB,MAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADrC,EAEGE,SAAS,iBAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAFhB,EAGG,CAACA,SAAD,IAAcF,MAAM,CAACmB,MAAP,KAAkB,CAAhC,iBAAqC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,0BAHxC,CAJF,CADF;AAYD;;AAGD,eAAepB,GAAf"},"metadata":{},"sourceType":"module"}